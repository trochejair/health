@model Web.HealthFoot.Models.ProviderAddress
@{
    ViewBag.Title = "Proveedores";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


@using (Html.BeginForm())
{
        @Html.AntiForgeryToken()
        <div class="row">
        <div class="col-md-12 text-center my-3">
            <h2>Agregar proveedores</h2>
        </div>
        <div class="col-md-6 mx-auto">
            <div class="row">
                <div class="col-md-12">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.NOMBRE, htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.NOMBRE, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NOMBRE, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.TELEFONO, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.TELEFONO, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TELEFONO, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">

                    <div class="form-group">
                        @Html.LabelFor(model => model.CORREO, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CORREO, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CORREO, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RFC, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.RFC, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RFC, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <h5>Dirección</h5>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CALLE, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CALLE, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CALLE, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.NUMERO, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.NUMERO, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NUMERO, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.COLONIA, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.COLONIA, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.COLONIA, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MUNICIPIO, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.MUNICIPIO, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MUNICIPIO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CIUDAD, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CIUDAD, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CIUDAD, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CP, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CP, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CP, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ESTADO, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ESTADO, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ESTADO, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="col-md-12 text-center">
                    <button type="submit" class="btn btn-primary rounded">
                        Agregar
                    </button>
                </div>
            </div>
        </div>
    </div>
}